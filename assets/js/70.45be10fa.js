(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{537:function(e,t,a){"use strict";a.r(t);var s=a(42),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"comecando"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comecando"}},[e._v("#")]),e._v(" Começando")]),e._v(" "),a("div",{staticClass:"scrimba"},[a("a",{attrs:{href:"https://scrimba.com/p/pnyzgAP/cMPa2Uk",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tente esta lição no Scrimba")])]),e._v(" "),a("p",[e._v("No centro de cada aplicação Vuex existe o "),a("strong",[a("em",[e._v("store")])]),e._v('. Um "'),a("em",[e._v("store")]),e._v('" é basicamente um recipiente que contém o '),a("strong",[e._v("estado")]),e._v(" da sua aplicação. Há duas coisas que tornam um "),a("em",[e._v("store")]),e._v(" Vuex diferente de um objeto global simples:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Os "),a("em",[e._v("stores")]),e._v(" Vuex são reativos. Quando os componentes do Vue obtêm o estado dele, eles atualizarão de forma reativa e eficiente se o estado do "),a("em",[e._v("store")]),e._v(" mudar.")])]),e._v(" "),a("li",[a("p",[e._v("Você não pode alterar diretamente os estados do "),a("em",[e._v("store")]),e._v(". A única maneira de mudar o estado de um "),a("em",[e._v("store")]),e._v(" é explicitamente "),a("strong",[e._v("confirmando (ou fazendo "),a("em",[e._v("commit")]),e._v(" de) mutações")]),e._v(". Isso garante que cada mudança de estado deixe um registro rastreável, e permite ferramentas que nos ajudem a entender melhor nossas aplicações.")])])]),e._v(" "),a("h3",{attrs:{id:"o-store-mais-simples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#o-store-mais-simples"}},[e._v("#")]),e._v(" O Store Mais Simples")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("NOTA")]),e._v(" "),a("p",[e._v("Vamos usar a sintaxe ES2015 para exemplos de código para o resto da documentação. Se você ainda não aprendeu como usá-la, "),a("a",{attrs:{href:"https://babeljs.io/docs/learn-es2015/",target:"_blank",rel:"noopener noreferrer"}},[e._v("veja aqui"),a("OutboundLink")],1),e._v("!")])]),e._v(" "),a("p",[e._v("Após "),a("RouterLink",{attrs:{to:"/ptbr/installation.html"}},[e._v("instalar")]),e._v(" o Vuex, vamos criar um "),a("em",[e._v("store")]),e._v(". É bem simples - basta fornecer um objeto de estado inicial, e algumas mutações:")],1),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Certifique-se de chamar Vue.use(Vuex) primeiro se estiver usando o sistema de módulos")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" store "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Vuex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Store")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  state"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    count"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  mutations"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("increment")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("count"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("++")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),a("p",[e._v("Agora, você pode acessar o objeto de estado como "),a("em",[e._v("store.state")]),e._v(" e acionar uma mudança de estado com o método "),a("em",[e._v("store.commit")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'increment'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// -> 1")]),e._v("\n")])])]),a("p",[e._v("Novamente, a razão pela qual estamos confirmando (ou fazendo "),a("em",[e._v("commit")]),e._v(" de) uma mutação em vez de mudar "),a("em",[e._v("store.state.count")]),e._v(" diretamente, é porque queremos rastreá-la explicitamente. Esta convenção simples torna sua intenção mais explícita, de modo que você possa ter melhores argumetos sobre as mudanças de estado em seu aplicativo ao ler o código. Além disso, isso nos dá a oportunidade de implementar ferramentas que podem registrar cada mutação, capturar momentos do estado ou mesmo realizar depuração viajando pelo histórico de estado ("),a("em",[e._v("time travel")]),e._v(").")]),e._v(" "),a("p",[e._v("Usar o estado do "),a("em",[e._v("store")]),e._v(" em um componente simplesmente envolve o retorno do estado dentro de um dado computado, porque o estado do "),a("em",[e._v("store")]),e._v(" é reativo. Acionar alterações simplesmente significa confirmar (ou fazer "),a("em",[e._v("commit")]),e._v(" de) mutações nos métodos dos componentes.")]),e._v(" "),a("p",[e._v("Aqui está um exemplo do "),a("a",{attrs:{href:"https://jsfiddle.net/n9jmu5v7/1269/",target:"_blank",rel:"noopener noreferrer"}},[e._v("aplicativo de contador do Vuex mais básico"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("Em seguida, discutiremos cada conceito chave em mais detalhes, começando com "),a("RouterLink",{attrs:{to:"/ptbr/guide/state.html"}},[e._v("Estado")]),e._v(".")],1)])}),[],!1,null,null,null);t.default=o.exports}}]);